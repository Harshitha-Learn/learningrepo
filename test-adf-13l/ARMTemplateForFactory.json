{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "test-adf-13l"
		},
		"AzureDataLakeStorage1_ls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1_ls'"
		},
		"testblob1_ls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'testblob1_ls'"
		},
		"AzureDataLakeStorage1_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stg1devtesti.dfs.core.windows.net/"
		},
		"adls_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stg1devtesti.dfs.core.windows.net/"
		},
		"testblob1_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storage12rest.dfs.core.windows.net/"
		},
		"stroagefiletrigger_properties_pipeline3_test_jsonfileprocess_parameters_FolderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"stroagefiletrigger_properties_pipeline3_test_jsonfileprocess_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"stroagefiletrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/97a9a77c-8104-417e-995b-eace2cfd65eb/resourceGroups/rg-new/providers/Microsoft.Storage/storageAccounts/stg1devtesti"
		},
		"trigger1pipeline1_properties_pipeline1_copy1_parameters_Path": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"trigger1pipeline1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/97a9a77c-8104-417e-995b-eace2cfd65eb/resourceGroups/rg-new/providers/Microsoft.Storage/storageAccounts/stg1devtesti"
		},
		"AzureDataLakeStorage972_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/97a9a77c-8104-417e-995b-eace2cfd65eb/resourceGroups/rg-new/providers/Microsoft.Storage/storageAccounts/stg1devtesti"
		},
		"AzureDataLakeStorage972_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"managedpe_storage_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/97a9a77c-8104-417e-995b-eace2cfd65eb/resourceGroups/DefaultResourceGroup-WEU/providers/Microsoft.Storage/storageAccounts/storage12rest"
		},
		"managedpe_storage_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"managedpe_storage_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"storage12rest.dfs.core.windows.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set TEST",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TEST",
										"value": {
											"value": "@item().CRMCompanyID",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Web1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://reqres.in/api/users",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\n    \"name\": @{concat('\"',item().CRMCompanyID,'\"')},\n    \"job\": \"leader1\"\n}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "csvip",
								"type": "DatasetReference",
								"parameters": {
									"path": "input"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"TEST": {
						"type": "String"
					},
					"test1": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-23T14:38:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csvip')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set TEST",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TEST",
										"value": {
											"value": "@item().CRMCompanyID",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Web1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://reqres.in/api/users",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\n    \"name\": @{concat('\"',item().CRMCompanyID,'\"')},\n    \"job\": \"leader1\"\n}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "csvip",
								"type": "DatasetReference",
								"parameters": {
									"path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Path": {
						"type": "string"
					}
				},
				"variables": {
					"TEST": {
						"type": "String"
					},
					"test1": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-23T14:38:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csvip')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Json1input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set test",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "test1",
										"value": {
											"value": "@item().WebCreatedCustomer",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Web1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set test",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://reqres.in/api/users",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\n    \"name\": @{concat('\"',item().WebCreatedCustomer,'\"')},\n    \"job\": \"leader1\"\n}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"test1": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-23T14:41:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3_test_jsonfileprocess')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {
									"folder": {
										"value": "'@{pipeline().parameters.FolderPath}'",
										"type": "Expression"
									},
									"filename": {
										"value": "'@{pipeline().parameters.FileName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "dataflow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('dataflow1').output.runStatus.output.sink1.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TestVar",
										"value": {
											"value": "@item().CRMCompanyID",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FolderPath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"variables": {
					"TestVar": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testblob1_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/testblob1_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPathds": {
						"type": "string",
						"defaultValue": "input"
					},
					"FileNameds": {
						"type": "string",
						"defaultValue": "Testdatajson.json"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileNameds",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FolderPathds",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"CRM Company ID": {
							"type": "string"
						},
						"Account Group": {
							"type": "string"
						},
						"Sales Cluster / Sales Office": {
							"type": "string"
						},
						"Sales Region / Sales Group": {
							"type": "string"
						},
						"Company Status": {
							"type": "string"
						},
						"Key Account Type": {
							"type": "string"
						},
						"Key Account Name": {
							"type": "string"
						},
						"Key Account Manager": {
							"type": "string"
						},
						"Customer Lifecycle": {
							"type": "string"
						},
						"Number of Machines": {
							"type": "string"
						},
						"Sales Area": {
							"type": "string"
						},
						"WebCreatedCustomer": {
							"type": "string"
						},
						"Company Market": {
							"type": "string"
						},
						"Distributor Level": {
							"type": "string"
						},
						"Number Of Employees": {
							"type": "string"
						},
						"Address 1: City": {
							"type": "string"
						},
						"Address: ZIP/Postal Code": {
							"type": "string"
						},
						"Address: State/Province": {
							"type": "string"
						},
						"Account Owner Email Address": {
							"type": "string"
						},
						"Company Name": {
							"type": "string"
						},
						"Account Owner Last Name": {
							"type": "string"
						},
						"Account Owner First Name": {
							"type": "string"
						},
						"Company Industry Sub Segment 2": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"SubSegment2": {
										"type": "string"
									}
								}
							}
						},
						"Company Industry Sub Segment": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"SubSegment": {
										"type": "string"
									}
								}
							}
						},
						"Company Industry Segment": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Segment": {
										"type": "string"
									}
								}
							}
						},
						"Company Customer Type": {
							"type": "string"
						},
						"Company Country": {
							"type": "string"
						},
						"Company Account Development Strategy": {
							"type": "string"
						},
						"Company EBP Code": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Testdatajson.json",
						"fileSystem": "input"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"CRM Company ID": {
							"type": "string"
						},
						"Account Group": {
							"type": "string"
						},
						"Sales Cluster / Sales Office": {
							"type": "string"
						},
						"Sales Region / Sales Group": {
							"type": "string"
						},
						"Company Status": {
							"type": "string"
						},
						"Key Account Type": {
							"type": "string"
						},
						"Key Account Name": {
							"type": "string"
						},
						"Key Account Manager": {
							"type": "string"
						},
						"Customer Lifecycle": {
							"type": "string"
						},
						"Number of Machines": {
							"type": "string"
						},
						"Sales Area": {
							"type": "string"
						},
						"WebCreatedCustomer": {
							"type": "string"
						},
						"Company Market": {
							"type": "string"
						},
						"Distributor Level": {
							"type": "string"
						},
						"Number Of Employees": {
							"type": "string"
						},
						"Address 1: City": {
							"type": "string"
						},
						"Address: ZIP/Postal Code": {
							"type": "string"
						},
						"Address: State/Province": {
							"type": "string"
						},
						"Account Owner Email Address": {
							"type": "string"
						},
						"Company Name": {
							"type": "string"
						},
						"Account Owner Last Name": {
							"type": "string"
						},
						"Account Owner First Name": {
							"type": "string"
						},
						"Company Industry Sub Segment 2": {
							"type": "array"
						},
						"Company Industry Sub Segment": {
							"type": "array"
						},
						"Company Industry Segment": {
							"type": "array"
						},
						"Company Customer Type": {
							"type": "string"
						},
						"Company Country": {
							"type": "string"
						},
						"Company Account Development Strategy": {
							"type": "string"
						},
						"Company EBP Code": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "result.json",
						"fileSystem": "processing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "output.json",
						"fileSystem": "processing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Testdata.csv",
						"fileSystem": {
							"value": "@dataset().path",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CRMCompanyID",
						"type": "String"
					},
					{
						"name": "AccountGroup",
						"type": "String"
					},
					{
						"name": "SalesClusterSalesOffice",
						"type": "String"
					},
					{
						"name": "SalesRegionSalesGroup",
						"type": "String"
					},
					{
						"name": "CompanyStatus",
						"type": "String"
					},
					{
						"name": "KeyAccountType",
						"type": "String"
					},
					{
						"name": "KeyAccountName",
						"type": "String"
					},
					{
						"name": "KeyAccountManager",
						"type": "String"
					},
					{
						"name": "CustomerLifecycle",
						"type": "String"
					},
					{
						"name": "NumberofMachines",
						"type": "String"
					},
					{
						"name": "SalesArea",
						"type": "String"
					},
					{
						"name": "WebCreatedCustomer",
						"type": "String"
					},
					{
						"name": "CompanyMarket",
						"type": "String"
					},
					{
						"name": "DistributorLevel",
						"type": "String"
					},
					{
						"name": "NumberOfEmployees",
						"type": "String"
					},
					{
						"name": "Address1City",
						"type": "String"
					},
					{
						"name": "AddressZIPPostalCode",
						"type": "String"
					},
					{
						"name": "AddressStateProvince",
						"type": "String"
					},
					{
						"name": "AccountOwnerEmailAddress",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					},
					{
						"name": "AccountOwnerLastName",
						"type": "String"
					},
					{
						"name": "AccountOwnerFirstName",
						"type": "String"
					},
					{
						"name": "CompanyIndustrySubSegment2",
						"type": "String"
					},
					{
						"name": "CompanyIndustrySubSegment",
						"type": "String"
					},
					{
						"name": "CompanyIndustrySegment",
						"type": "String"
					},
					{
						"name": "CompanyCustomerType",
						"type": "String"
					},
					{
						"name": "CompanyCountry",
						"type": "String"
					},
					{
						"name": "CompanyAccountDevelopmentStrategy",
						"type": "String"
					},
					{
						"name": "CompanyEBPCode",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_ls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_ls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adls_ls_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testblob1_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('testblob1_ls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('testblob1_ls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stroagefiletrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline3_test_jsonfileprocess",
							"type": "PipelineReference"
						},
						"parameters": {
							"FolderPath": "[parameters('stroagefiletrigger_properties_pipeline3_test_jsonfileprocess_parameters_FolderPath')]",
							"FileName": "[parameters('stroagefiletrigger_properties_pipeline3_test_jsonfileprocess_parameters_FileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/",
					"blobPathEndsWith": "*json",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('stroagefiletrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline3_test_jsonfileprocess')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1pipeline1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1_copy1",
							"type": "PipelineReference"
						},
						"parameters": {
							"Path": "[parameters('trigger1pipeline1_properties_pipeline1_copy1_parameters_Path')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/",
					"blobPathEndsWith": "*.json",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1pipeline1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1_copy1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/selfhostedrunner')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "flatten2"
						},
						{
							"name": "flatten3"
						}
					],
					"scriptLines": [
						"parameters{",
						"     folder as string,",
						"     filename as string",
						"}",
						"source(output(",
						"          {CRM Company ID} as string,",
						"          {Account Group} as string,",
						"          {Sales Cluster / Sales Office} as string,",
						"          {Sales Region / Sales Group} as string,",
						"          {Company Status} as string,",
						"          {Key Account Type} as string,",
						"          {Key Account Name} as string,",
						"          {Key Account Manager} as string,",
						"          {Customer Lifecycle} as string,",
						"          {Number of Machines} as string,",
						"          {Sales Area} as string,",
						"          WebCreatedCustomer as string,",
						"          {Company Market} as string,",
						"          {Distributor Level} as string,",
						"          {Number Of Employees} as string,",
						"          {Address 1: City} as string,",
						"          {Address: ZIP/Postal Code} as string,",
						"          {Address: State/Province} as string,",
						"          {Account Owner Email Address} as string,",
						"          {Company Name} as string,",
						"          {Account Owner Last Name} as string,",
						"          {Account Owner First Name} as string,",
						"          {Company Industry Sub Segment 2} as (SubSegment2 as string)[],",
						"          {Company Industry Sub Segment} as (SubSegment as string)[],",
						"          {Company Industry Segment} as (Segment as string)[],",
						"          {Company Customer Type} as string,",
						"          {Company Country} as string,",
						"          {Company Account Development Strategy} as string,",
						"          {Company EBP Code} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'arrayOfDocuments') ~> source1",
						"derivedColumn1 foldDown(unroll(CompanyIndustrySegment),",
						"     mapColumn(",
						"          {CRM Company ID},",
						"          {Account Group},",
						"          {Sales Cluster / Sales Office},",
						"          {Sales Region / Sales Group},",
						"          {Company Status},",
						"          {Key Account Type},",
						"          {Key Account Name},",
						"          {Key Account Manager},",
						"          {Customer Lifecycle},",
						"          {Number of Machines},",
						"          {Sales Area},",
						"          WebCreatedCustomer,",
						"          {Company Market},",
						"          {Distributor Level},",
						"          {Number Of Employees},",
						"          {Address 1: City},",
						"          {Address: ZIP/Postal Code},",
						"          {Address: State/Province},",
						"          {Account Owner Email Address},",
						"          {Company Name},",
						"          {Account Owner Last Name},",
						"          {Account Owner First Name},",
						"          {Company Customer Type},",
						"          {Company Country},",
						"          {Company Account Development Strategy},",
						"          {Company EBP Code},",
						"          Segment = CompanyIndustrySegment.Segment,",
						"          CompanyIndustrySubSegment,",
						"          CompanyIndustrySubsegment2",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"source1 derive(CompanyIndustrySegment = {Company Industry Segment},",
						"          CompanyIndustrySubSegment = {Company Industry Sub Segment},",
						"          CompanyIndustrySubsegment2 = {Company Industry Sub Segment 2}) ~> derivedColumn1",
						"flatten1 foldDown(unroll(CompanyIndustrySubSegment),",
						"     mapColumn(",
						"          {CRM Company ID},",
						"          {Account Group},",
						"          {Sales Cluster / Sales Office},",
						"          {Sales Region / Sales Group},",
						"          {Company Status},",
						"          {Key Account Type},",
						"          {Key Account Name},",
						"          {Key Account Manager},",
						"          {Customer Lifecycle},",
						"          {Number of Machines},",
						"          {Sales Area},",
						"          WebCreatedCustomer,",
						"          {Company Market},",
						"          {Distributor Level},",
						"          {Number Of Employees},",
						"          {Address 1: City},",
						"          {Address: ZIP/Postal Code},",
						"          {Address: State/Province},",
						"          {Account Owner Email Address},",
						"          {Company Name},",
						"          {Account Owner Last Name},",
						"          {Account Owner First Name},",
						"          {Company Customer Type},",
						"          {Company Country},",
						"          {Company Account Development Strategy},",
						"          {Company EBP Code},",
						"          Segment,",
						"          SubSegment = CompanyIndustrySubSegment.SubSegment,",
						"          CompanyIndustrySubsegment2",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten2",
						"flatten2 foldDown(unroll(CompanyIndustrySubsegment2),",
						"     mapColumn(",
						"          {CRM Company ID},",
						"          {Account Group},",
						"          {Sales Cluster / Sales Office},",
						"          {Sales Region / Sales Group},",
						"          {Company Status},",
						"          {Key Account Type},",
						"          {Key Account Name},",
						"          {Key Account Manager},",
						"          {Customer Lifecycle},",
						"          {Number of Machines},",
						"          {Sales Area},",
						"          WebCreatedCustomer,",
						"          {Company Market},",
						"          {Distributor Level},",
						"          {Number Of Employees},",
						"          {Address 1: City},",
						"          {Address: ZIP/Postal Code},",
						"          {Address: State/Province},",
						"          {Account Owner Email Address},",
						"          {Company Name},",
						"          {Account Owner Last Name},",
						"          {Account Owner First Name},",
						"          {Company Customer Type},",
						"          {Company Country},",
						"          {Company Account Development Strategy},",
						"          {Company EBP Code},",
						"          Segment,",
						"          SubSegment,",
						"          SubSegment2 = CompanyIndustrySubsegment2.SubSegment2",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten3",
						"flatten3 sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          CRMCompanyID = {CRM Company ID},",
						"          {Account Group},",
						"          {Sales Cluster / Sales Office},",
						"          {Sales Region / Sales Group},",
						"          {Company Status},",
						"          {Key Account Type},",
						"          {Key Account Name},",
						"          {Key Account Manager},",
						"          {Customer Lifecycle},",
						"          {Number of Machines},",
						"          {Sales Area},",
						"          WebCreatedCustomer,",
						"          {Company Market},",
						"          {Distributor Level},",
						"          {Number Of Employees},",
						"          {Address 1: City},",
						"          {Address: ZIP/Postal Code},",
						"          {Address: State/Province},",
						"          {Account Owner Email Address},",
						"          {Company Name},",
						"          {Account Owner Last Name},",
						"          {Account Owner First Name},",
						"          {Company Customer Type},",
						"          {Company Country},",
						"          {Company Account Development Strategy},",
						"          {Company EBP Code},",
						"          Segment,",
						"          SubSegment,",
						"          SubSegment2",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureDataLakeStorage972')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureDataLakeStorage972_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureDataLakeStorage972_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/managedpe_storage')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('managedpe_storage_properties_privateLinkResourceId')]",
				"groupId": "[parameters('managedpe_storage_properties_groupId')]",
				"fqdns": "[parameters('managedpe_storage_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}